apiVersion: apps/v1
kind: Deployment
metadata:
  name: dual-sidecar-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dual-sidecar-demo
  template:
    metadata:
      labels:
        app: dual-sidecar-demo
    spec:
      containers:
        - name: app
          image: nginx
          readinessProbe:
            httpGet:
              path: /state
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5
        - name: busybox-checker
          image: busybox
          command:
            - /bin/sh
            - -c
            - |
              while true; do
                if wget -qO- http://localhost:80/ > /dev/null; then
                  RESPONSE="HTTP/1.1 200 OK\r\nContent-Type: text/plain\r\nContent-Length: 2\r\n\r\nOK"
                else
                  RESPONSE="HTTP/1.1 503 Service Unavailable\r\nContent-Type: text/plain\r\nContent-Length: 9\r\n\r\nNOT READY"
                fi
                { echo -e "$RESPONSE"; } | nc -l -p 8080
              done
          ports:
            - containerPort: 8080 
---
apiVersion: v1
kind: Pod
metadata:
  name: dual-container-readiness
spec:
  volumes:
    - name: shared-data
      emptyDir: {}
    - name: certs
      secret:
        secretName: my-tls-secret # Replace with your actual secret name
  containers:
    - name: nginx
      image: nginx:latest
      ports:
        - containerPort: 8443
      volumeMounts:
        - name: shared-data
          mountPath: /shared
        - name: certs
          mountPath: /certs
      readinessProbe:
        exec:
          command:
            - sh
            - -c
            - |
              if [ -f /shared/ready-state ]; then
                grep -q "success" /shared/ready-state
              else
                exit 1
              fi
        initialDelaySeconds: 5
        periodSeconds: 5

    - name: readiness-sidecar
      image: registry.access.redhat.com/ubi8/ubi:latest
      volumeMounts:
        - name: shared-data
          mountPath: /shared
        - name: certs
          mountPath: /certs
      command:
        - sh
        - -c
        - |
          while true; do
            if curl --cacert /certs/ca.crt --cert /certs/tls.crt --key /certs/tls.key -k https://localhost:8443/ready; then
              echo "success" > /shared/ready-state
            else
              echo "fail" > /shared/ready-state
            fi
            sleep 2
          done 
