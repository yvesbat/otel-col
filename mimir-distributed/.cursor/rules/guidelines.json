{
    "description": "Development and code review guidelines",
    "globs": ["**/*"],
    "alwaysApply": true,
    "rules": [
        {
            "name": "verify_information",
            "description": "Always verify information before presenting it. Do not make assumptions or speculate without clear evidence."
        },
        {
            "name": "file_by_file_changes",
            "description": "Make changes file by file and give a chance to spot mistakes."
        },
        {
            "name": "no_apologies",
            "description": "Never use apologies."
        },
        {
            "name": "no_understanding_feedback",
            "description": "Avoid giving feedback about understanding in comments or documentation."
        },
        {
            "name": "no_whitespace_suggestions",
            "description": "Don't suggest whitespace changes."
        },
        {
            "name": "no_summaries",
            "description": "Don't summarize changes made."
        },
        {
            "name": "no_inventions",
            "description": "Don't invent changes other than what's explicitly requested."
        },
        {
            "name": "no_unnecessary_confirmations",
            "description": "Don't ask for confirmation of information already provided in the context."
        },
        {
            "name": "preserve_existing_code",
            "description": "Don't remove unrelated code or functionalities. Pay attention to preserving existing structures."
        },
        {
            "name": "single_chunk_edits",
            "description": "Provide all edits in a single chunk instead of multiple-step instructions or explanations for the same file."
        },
        {
            "name": "no_implementation_checks",
            "description": "Don't ask to verify implementations that are visible in the provided context."
        },
        {
            "name": "no_unnecessary_updates",
            "description": "Don't suggest updates or changes to files when there are no actual modifications needed."
        },
        {
            "name": "provide_real_file_links",
            "description": "Always provide links to the real files, not the context generated file."
        },
        {
            "name": "no_current_implementation",
            "description": "Don't show or discuss the current implementation unless specifically requested."
        },
        {
            "name": "check_context_generated_file",
            "description": "Remember to check the context generated file for the current file contents and implementations."
        },
        {
            "name": "use_explicit_variable_names",
            "description": "Prefer descriptive, explicit variable names over short, ambiguous ones to enhance code readability."
        },
        {
            "name": "follow_consistent_coding_style",
            "description": "Adhere to the existing coding style in the project for consistency."
        },
        {
            "name": "prioritize_performance",
            "description": "When suggesting changes, consider and prioritize code performance where applicable."
        },
        {
            "name": "security_first_approach",
            "description": "Always consider security implications when modifying or suggesting code changes."
        },
        {
            "name": "test_coverage",
            "description": "Suggest or include appropriate unit tests for new or modified code."
        },
        {
            "name": "error_handling",
            "description": "Implement robust error handling and logging where necessary."
        },
        {
            "name": "modular_design",
            "description": "Encourage modular design principles to improve code maintainability and reusability."
        },
        {
            "name": "version_compatibility",
            "description": "Ensure suggested changes are compatible with the project's specified language or framework versions."
        },
        {
            "name": "avoid_magic_numbers",
            "description": "Replace hardcoded values with named constants to improve code clarity and maintainability."
        },
        {
            "name": "consider_edge_cases",
            "description": "When implementing logic, always consider and handle potential edge cases."
        },
        {
            "name": "use_assertions",
            "description": "Include assertions wherever possible to validate assumptions and catch potential errors early."
        }
    ]
} 